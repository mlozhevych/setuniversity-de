services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - streaming-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_MESSAGE_MAX_BYTES: 2000000
    volumes:
      - ./kafka/data:/var/lib/kafka/data
    networks:
      - streaming-network

  # Cassandra database
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: WikipediaCluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 256
    volumes:
      - ./cassandra/data:/var/lib/cassandra
    networks:
      - streaming-network
    healthcheck:
      test: [ "CMD-SHELL", "cqlsh -e 'describe cluster'" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spark Master
  spark-master:
    image: bitnami/spark:3.4
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark/data:/opt/spark/work-dir
    networks:
      - streaming-network

  # Spark Worker
  spark-worker:
    image: bitnami/spark:3.4
    container_name: spark-worker
    depends_on:
      - spark-master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./spark/data:/opt/spark/work-dir
    networks:
      - streaming-network

  # Wikipedia Stream Generator
  stream-generator:
    build:
      context: ./stream-generator
      dockerfile: Dockerfile
    container_name: stream-generator
    depends_on:
      - kafka
    restart: on-failure
    networks:
      - streaming-network

  # Spark Streaming Processor
  spark-processor:
    build:
      context: ./spark-streaming-processor
      dockerfile: Dockerfile
    container_name: spark-processor
    depends_on:
      - spark-master
      - spark-worker
      - kafka
    restart: on-failure
    networks:
      - streaming-network

  # Spark Streaming Cassandra Writer
  spark-cassandra-writer:
    build:
      context: ./spark-streaming-cassandra-writer
      dockerfile: Dockerfile
    container_name: spark-cassandra-writer
    depends_on:
      - spark-master
      - spark-worker
      - cassandra
      - kafka
    restart: on-failure
    networks:
      - streaming-network

networks:
  streaming-network:
    driver: bridge
